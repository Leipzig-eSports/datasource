<?xml version="1.0"?>

<project basedir=".." default="all" name="All">

	<target name="init" description="inits the build">

		<property environment="env"/>
		<property name="define.jarfilename"  	value="de_willuhn_ds.jar"/>
		<property name="define.package"      	value="de.willuhn.datasource"/>
        <property name="build.dir"        		value="build"/>

        <buildnumber file="${build.dir}/BUILD"/>
    	<loadfile property="version" srcFile="${build.dir}/RELEASE">
		    <filterchain>
				<striplinebreaks/>
		    </filterchain>
		</loadfile>

        <echo message="VERSION: ${version}"/>
        <echo message="BUILD  : ${build.number}"/>

        <property name="project.release"   		value="releases/${version}-${build.number}"/>
        <property name="project.src"      		value="${project.release}/src/classes"/>
        <property name="project.tmp"      		value="${project.release}/tmp"/>
        <property name="project.javadoc"    	value="${project.release}/javadoc"/>
        <property name="src.dir"        		value="src"/>
        <property name="lib.dir"        		value="lib"/>
        <property name="class.dir"        		value="${project.tmp}/bin"/>

		<path id="compilepath">
	      <fileset dir="${lib.dir}">
	        <include name="**/*.jar"/>
	      </fileset>
		</path>

    </target>


    <target depends="init" name="compile" description="compiles everything">
		<mkdir dir="${class.dir}"/>
		<javac fork="true" debug="true" deprecation="true" destdir="${class.dir}" srcdir="${src.dir}">
			<classpath refid="compilepath" />
		</javac>

        <rmic verify="true" base="${class.dir}">
            <include name="**/*.class"/>
			<classpath refid="compilepath" />
        </rmic>
	</target>


	<target depends="compile" name="cvstag" description="tags the source in the CVS">
		<exec executable="cvs" failonerror="true" dir="${basedir}">
			<arg line="tag ${version}_BUILD_${build.number}"/>
		</exec>
	</target>


    <target depends="compile" name="jar" description="generates the jar file">
		<mkdir dir="${project.release}/lib/de_willuhn"/>
		<mkdir dir="${project.release}/lib/mckoi"/>
		<mkdir dir="${project.release}/lib/mysql"/>
		<jar destfile="${project.release}/lib/de_willuhn/${define.jarfilename}">
			<manifest>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="Implementation-Title" value="${define.jarfilename}"/>
				<attribute name="Implementation-Version" value="${version}"/>
				<attribute name="Implementation-Buildnumber" value="${build.number}"/>
				<attribute name="Class-Path" value="../mckoi/mckoidb.jar ../mysql/mysql-connector-java-3.0.8-stable-bin.jar" />
	        </manifest>
    	    <fileset dir="${class.dir}"/>
	    </jar>

		<copy file="${lib.dir}/mckoidb.jar"
			tofile="${project.release}/lib/mckoi/mckoidb.jar" />
		<copy file="${lib.dir}/mysql-connector-java-3.0.8-stable-bin.jar"
			tofile="${project.release}/lib/mysql/mysql-connector-java-3.0.8-stable-bin.jar" />
			
	</target>


	<target depends="compile" name="javadoc" description="creates the api doc">
		<mkdir dir="${project.javadoc}"/>
		<javadoc destdir="${project.javadoc}" packagenames="${define.package}.*">
			<classpath refid="compilepath" />
			<sourcepath>
				<pathelement location="${src.dir}"/>
			</sourcepath>
		</javadoc>
    </target>


	<target name="clean" description="cleanup">
		<delete dir="${project.tmp}"/>
	</target>


    <target depends="init,compile,cvstag,jar,javadoc,clean" description="build an official release" name="all" />

    <target depends="init,compile,jar,clean" description="build inofficial release" name="fast" />

</project>
